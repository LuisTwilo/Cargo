[{"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\index.js":"1","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\App.js":"2","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\reportWebVitals.js":"3","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Navbar.jsx":"4","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Flow.jsx":"5","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Jobs.jsx":"6","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\IntegrationDetails.jsx":"7","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Integration.jsx":"8","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\NavbarItem.jsx":"9","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Connector.jsx":"10","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\IntegrationCard.jsx":"11","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\Services\\integrationServices.js":"12","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\Services\\properties.js":"13","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\IntegrationForm.jsx":"14","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\OAuthCallback.jsx":"15","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\Services\\salesfoceConnection.js":"16","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\store\\configureStore.js":"17","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\store\\reducer.js":"18","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\TopNavbar.jsx":"19"},{"size":594,"mtime":1621608239986,"results":"20","hashOfConfig":"21"},{"size":1156,"mtime":1621530875875,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2519,"mtime":1614202617132,"results":"24","hashOfConfig":"21"},{"size":6764,"mtime":1621958385793,"results":"25","hashOfConfig":"21"},{"size":185,"mtime":1614560579721,"results":"26","hashOfConfig":"21"},{"size":1375,"mtime":1621519864219,"results":"27","hashOfConfig":"21"},{"size":1348,"mtime":1615514663052,"results":"28","hashOfConfig":"21"},{"size":275,"mtime":1620945925027,"results":"29","hashOfConfig":"21"},{"size":1488,"mtime":1621524159455,"results":"30","hashOfConfig":"21"},{"size":777,"mtime":1621467624046,"results":"31","hashOfConfig":"21"},{"size":2237,"mtime":1621612917217,"results":"32","hashOfConfig":"21"},{"size":191,"mtime":1621530880408,"results":"33","hashOfConfig":"21"},{"size":204,"mtime":1614789603641,"results":"34","hashOfConfig":"21"},{"size":747,"mtime":1621523873129,"results":"35","hashOfConfig":"21"},{"size":697,"mtime":1621466022112,"results":"36","hashOfConfig":"21"},{"size":140,"mtime":1617137489608,"results":"37","hashOfConfig":"21"},{"size":180,"mtime":1615573878807,"results":"38","hashOfConfig":"21"},{"size":400,"mtime":1620947748845,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"d91tdn",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\index.js",[],["83","84"],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\App.js",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\reportWebVitals.js",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Navbar.jsx",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Flow.jsx",["85","86","87","88","89","90","91","92","93"],"import React, { useState } from \"react\";\r\n// import { useParams } from \"react-router\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport {\r\n  getConnections,\r\n  getObjectFields,\r\n  getSalesforceObjects,\r\n} from \"../Services/integrationServices\";\r\nimport \"./Flow.css\";\r\n\r\nfunction Flow() {\r\n  // let { integrationId, flowId } = useParams();\r\n  const [connections, setConnections] = useState([]);\r\n  const [isSalesforce, setIsSalesforce] = useState(false);\r\n  const [isCsv, setIsCsv] = useState(false);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [csvColumns, setCsvColumns] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sourceConnectionId, setSourceConnectionId] = useState(\"\");\r\n  const [endConnectionId, setEndConnectionId] = useState(\"\");\r\n  const [sourceSalesforceObjects, setSourceSalesforceObjects] = useState([]);\r\n  const [endSalesforceObjects, setEndSalesforceObjects] = useState([]);\r\n  const [currentSourceObject, setCurrentSourceObject] = useState(\"\");\r\n  const [currentEndObject, setCurrentEndObject] = useState(\"\");\r\n  const [sourceFields, setSourceFields] = useState([]);\r\n  const [endFields, setEndFields] = useState([]);\r\n  const [selectedfields, setSelectedFields] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const animatedComponents = makeAnimated();\r\n\r\n  const handleInitialChange = async (initial) => {\r\n    if (initial === \"salesforce\") {\r\n      setIsSalesforce(true);\r\n      setIsCsv(false);\r\n      setConnections(await getConnections());\r\n    } else {\r\n      setIsSalesforce(false);\r\n      setIsCsv(true);\r\n    }\r\n  };\r\n\r\n  const handleSourceConnectionChange = async (connectionId) => {\r\n    setIsLoading(true);\r\n    setSourceConnectionId(connectionId);\r\n    setSourceSalesforceObjects(await getSalesforceObjects(connectionId));\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleEndConnectionChange = async (connectionId) => {\r\n    setIsLoading(true);\r\n    setEndConnectionId(connectionId);\r\n    setEndSalesforceObjects(await getSalesforceObjects(connectionId));\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleObjectChange = async (currentObject) => {\r\n    setCurrentSourceObject(currentObject);\r\n    setSourceFields(await getObjectFields(sourceConnectionId, currentObject));\r\n  };\r\n\r\n  const handleCSVSubmit = async (file) => {\r\n    let reader = new FileReader();\r\n\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      let result = [];\r\n      let lines = reader.result.split(\"\\n\");\r\n      let headers = lines[0].split(\",\").map((title) => {\r\n        let headerTitle = title.replace(/['\"]+/g, \"\");\r\n\r\n        for (let i = 1; i < lines.length; i++) {\r\n          let obj = {};\r\n          let currentline = lines[i].split(\",\");\r\n          for (let j = 0; j < headers.length; j++) {\r\n            obj[headers[j]] = currentline[j];\r\n          }\r\n          result.push(obj);\r\n        }\r\n        return { value: headerTitle, label: headerTitle };\r\n      });\r\n      setCsvColumns(headers);\r\n      setCsvData(result);\r\n    };\r\n  };\r\n\r\n  const handleSelectedFields = (selectedFields) => {\r\n    setSelectedFields(selectedFields);\r\n    createQuery(selectedFields);\r\n  };\r\n\r\n  const createQuery = (selectedfields) => {\r\n    if (selectedfields) {\r\n      const queryText = selectedfields.map((item) => item.value).join(\",+\");\r\n      const query = `SELECT+${queryText}+FROM+${currentSourceObject}`;\r\n      setQuery(query);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flow\">\r\n      <div className=\"source\">\r\n        <div>\r\n          <label htmlFor=\"initial\">What do you want to do?</label>\r\n          <Select\r\n            options={[\r\n              { value: \"1\", label: \" \" },\r\n              { value: \"salesforce\", label: \"Salesforce\" },\r\n              { value: \"csv\", label: \"Import CSV File\" },\r\n            ]}\r\n            onChange={(e) => handleInitialChange(e.value)}\r\n            // styles={{ menu: (base) => ({ ...base, position: \"relative\" }) }}\r\n          />\r\n        </div>\r\n\r\n        {isSalesforce && (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"connections\">Connections</label>\r\n              <div className=\"connection\">\r\n                <div className=\"connection__select\">\r\n                  <Select\r\n                    options={connections.map((connection) => ({\r\n                      value: connection._id,\r\n                      label: connection.name,\r\n                    }))}\r\n                    onChange={(e) => handleSourceConnectionChange(e.value)}\r\n                  />\r\n                </div>\r\n                <button>create new connection</button>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"sourceSalesforceObjects\">\r\n                Salesforce Objects\r\n              </label>\r\n\r\n              <Select\r\n                options={sourceSalesforceObjects}\r\n                onChange={(e) => handleObjectChange(e.value)}\r\n                styles={{ menu: (base) => ({ ...base, position: \"relative\" }) }}\r\n                isLoading={isLoading}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"sourceFields\">Object Fields</label>\r\n              <Select\r\n                closeMenuOnSelect={false}\r\n                onSelectResetsInput={false}\r\n                components={animatedComponents}\r\n                isMulti\r\n                options={sourceFields}\r\n                onChange={(selected) => handleSelectedFields(selected)}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        {isCsv && (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"csvfile\">submit csv file</label>\r\n              <input\r\n                id=\"csvfile\"\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={(e) => handleCSVSubmit(e.target.files[0])}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"destination\">\r\n        <div>\r\n          <label htmlFor=\"connections\">Connections</label>\r\n\r\n          <Select\r\n            options={connections.map((connection) => ({\r\n              value: connection._id,\r\n              label: connection.name,\r\n            }))}\r\n            onChange={(e) => handleEndConnectionChange(e.value)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"sourceSalesforceObjects\">Salesforce Objects</label>\r\n\r\n          <Select\r\n            options={endSalesforceObjects}\r\n            onChange={(e) => handleObjectChange(e.value)}\r\n            styles={{ menu: (base) => ({ ...base, position: \"relative\" }) }}\r\n            isLoading={isLoading}\r\n          />\r\n        </div>\r\n\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Flow;\r\n","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Jobs.jsx",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\IntegrationDetails.jsx",["94"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { getflows } from \"../Services/integrationServices\";\r\nimport \"./IntegrationDetails.css\";\r\n\r\nfunction IntegrationDetails() {\r\n  let { id } = useParams();\r\n\r\n  const [flows, setflows] = useState([]);\r\n\r\n  const getflowsAsync = async () => {\r\n    const flows = await getflows(id);\r\n    console.log(flows);\r\n    setflows(flows);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getflowsAsync();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"component\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr className=\"table__header\">\r\n            <th>Flow Name</th>\r\n            <th>Description</th>\r\n            <th>Created date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {flows.map((flow) => {\r\n            return (\r\n              <tr className=\"tablerows\">\r\n                <td className=\"tablerows\">\r\n                  <Link to={`/integration/${id}/flow/${flow.id}`}>\r\n                    {flow.name}\r\n                  </Link>\r\n                </td>\r\n                <td className=\"tablerows\">{flow.description}</td>\r\n                <td>{flow.createdDate}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IntegrationDetails;\r\n","C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Integration.jsx",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\NavbarItem.jsx",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\Connector.jsx",[],["95","96"],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\IntegrationCard.jsx",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\Services\\integrationServices.js",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\Services\\properties.js",[],["97","98"],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\IntegrationForm.jsx",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\OAuthCallback.jsx",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\Services\\salesfoceConnection.js",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\store\\configureStore.js",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\store\\reducer.js",[],"C:\\Users\\luis\\OneDrive\\Documents\\BrickLane\\Cargo\\view\\src\\components\\TopNavbar.jsx",["99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":17,"column":10,"nodeType":"106","messageId":"107","endLine":17,"endColumn":17},{"ruleId":"104","severity":1,"message":"108","line":18,"column":10,"nodeType":"106","messageId":"107","endLine":18,"endColumn":20},{"ruleId":"104","severity":1,"message":"109","line":21,"column":10,"nodeType":"106","messageId":"107","endLine":21,"endColumn":25},{"ruleId":"104","severity":1,"message":"110","line":25,"column":10,"nodeType":"106","messageId":"107","endLine":25,"endColumn":26},{"ruleId":"104","severity":1,"message":"111","line":25,"column":28,"nodeType":"106","messageId":"107","endLine":25,"endColumn":47},{"ruleId":"104","severity":1,"message":"112","line":27,"column":10,"nodeType":"106","messageId":"107","endLine":27,"endColumn":19},{"ruleId":"104","severity":1,"message":"113","line":27,"column":21,"nodeType":"106","messageId":"107","endLine":27,"endColumn":33},{"ruleId":"104","severity":1,"message":"114","line":28,"column":10,"nodeType":"106","messageId":"107","endLine":28,"endColumn":24},{"ruleId":"104","severity":1,"message":"115","line":29,"column":10,"nodeType":"106","messageId":"107","endLine":29,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":20,"column":6,"nodeType":"118","endLine":20,"endColumn":8,"suggestions":"119"},{"ruleId":"100","replacedBy":"120"},{"ruleId":"102","replacedBy":"121"},{"ruleId":"100","replacedBy":"122"},{"ruleId":"102","replacedBy":"123"},{"ruleId":"104","severity":1,"message":"124","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":18},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'csvData' is assigned a value but never used.","Identifier","unusedVar","'csvColumns' is assigned a value but never used.","'endConnectionId' is assigned a value but never used.","'currentEndObject' is assigned a value but never used.","'setCurrentEndObject' is assigned a value but never used.","'endFields' is assigned a value but never used.","'setEndFields' is assigned a value but never used.","'selectedfields' is assigned a value but never used.","'query' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getflowsAsync'. Either include it or remove the dependency array.","ArrayExpression",["127"],["125"],["126"],["125"],["126"],"'NavbarItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [getflowsAsync]",{"range":"130","text":"131"},[527,529],"[getflowsAsync]"]